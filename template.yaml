description: Kubernetes nodes deployed with Heat on Chameleon

heat_template_version: 2015-10-15

resources:
  nfs_server_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: public

  nfs_server:
    type: OS::Nova::Server
    properties:
      flavor: baremetal
      image: CC-CentOS7
      key_name: { get_param: key_name }
      networks:
        - network: sharednet1
      scheduler_hints: { reservation: { get_param: reservation_id } }
      user_data: |
        #!/bin/bash
        yum install -y nfs-utils
        mkdir -p /exports/data
        chown -R cc:cc /exports
        chmod a+w /exports/data
        echo '/exports/data 10.0.0.0/8(rw,async)' >> /etc/exports
        systemctl enable rpcbind && systemctl start rpcbind
        systemctl enable nfs-server && systemctl start nfs-server
        touch /exports/data/a

  nfs_server_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: nfs_server_floating_ip }
      server_id: { get_resource: nfs_server }

  kubernetes_main_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: public
      
  kubernetes_main_config:
    type: OS::Heat::SoftwareConfig
    properties:
      outputs:
        - name: join
      group: script
      config:
        str_replace:
          template: |
            #!/bin/bash
            yum install -y nfs-utils
            echo "$nfs_server_ip:/exports/data    /mnt/    nfs" > /etc/fstab
            mount -a
            yum install -y docker
            systemctl enable docker && systemctl start docker
            cat <<EOF > /etc/yum.repos.d/kubernetes.repo
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=1
            repo_gpgcheck=1
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            exclude=kube*
            EOF
            setenforce 0
            yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
            systemctl enable kubelet && systemctl start kubelet
            modprobe br_netfilter
            sysctl net.bridge.bridge-nf-call-iptables=1
            kubeadm init --pod-network-cidr=10.244.0.0/16 > /home/cc/output.dat
            mkdir -p /home/cc/.kube
            cp /etc/kubernetes/admin.conf /home/cc/.kube/config
            chown -R cc:cc /home/cc/.kube
            # check https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#pod-network
            grep "kubeadm join" /home/cc/output.dat > ${heat_outputs_path}.join
            kubectl create -f https://raw.githubusercontent.com/kubernetes-incubator/external-storage/master/nfs-client/deploy/rbac.yaml
            wget https://raw.githubusercontent.com/kubernetes-incubator/external-storage/master/nfs-client/deploy/deployment.yaml -O deployment.yaml
            sed 's/10.10.10.60/$nfs_server_ip/' -i deployment.yaml
            kubectl create -f deployment.yaml
            kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml

          params:
            $nfs_server_ip: { get_attr: [nfs_server, first_address] }
        
  kubernetes_main_config_sd:
    type: OS::Heat::SoftwareDeployment
    properties:
      server: { get_resource: kubernetes_main }
      config: { get_resource: kubernetes_main_config }
      signal_transport: HEAT_SIGNAL

  kubernetes_main:
    type: OS::Nova::Server
    properties:
      flavor: baremetal
      image: CC-CentOS7
      key_name: { get_param: key_name }
      networks:
         - network: sharednet1
      scheduler_hints: { reservation: { get_param: reservation_id } }
      user_data_format: SOFTWARE_CONFIG
      software_config_transport: POLL_SERVER_HEAT

  kubernetes_main_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: kubernetes_main_floating_ip }
      server_id: { get_resource: kubernetes_main }

  kubernetes_nodes_config:
    type: OS::Heat::SoftwareConfig
    properties:
      inputs:
        - name: join
      group: script
      config:
        str_replace:
          template: |
            #!/bin/bash
            sudo yum install -y nfs-utils
            sudo echo "$nfs_server_ip:/exports/data    /mnt/    nfs" > /etc/fstab
            sudo mount -a
            yum install -y docker
            systemctl enable docker && sudo systemctl start docker
            cat <<EOF > /etc/yum.repos.d/kubernetes.repo
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=1
            repo_gpgcheck=1
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            exclude=kube*
            EOF
            setenforce 0
            yum install -y kubelet kubeadm --disableexcludes=kubernetes
            echo "$join" > /home/cc/join.sh
            sudo $join
          params:
            $nfs_server_ip: { get_attr: [nfs_server, first_address] }

  kubernetes_nodes_config_sdg:
    type: OS::Heat::SoftwareDeploymentGroup
    properties:
      config: { get_resource: kubernetes_nodes_config }
      servers: { get_attr: [kubernetes_nodes, refs_map] }
      signal_transport: HEAT_SIGNAL
      input_values:
        join: { get_attr: [ kubernetes_main_config_sd, join ] }

  kubernetes_nodes:
    type: OS::Heat::ResourceGroup
    depends_on: kubernetes_main
    properties:
      count: { get_param: kubernetes_node_count }
      resource_def:
        type: OS::Nova::Server
        properties:
          flavor: baremetal
          image: CC-CentOS7
          key_name: { get_param: key_name }
          networks:
            - network: sharednet1
          scheduler_hints: { reservation: { get_param: reservation_id } }
          user_data_format: SOFTWARE_CONFIG
          software_config_transport: POLL_SERVER_HEAT

parameters:
  kubernetes_node_count:
    type: number
    description: Number of kubernete client instances
    default: 3
    constraints:
      - range: { min: 1 }
        description: There must be at least one client.
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: laboratory
    constraints:
      - custom_constraint: nova.keypair
  reservation_id:
    type: string
    description: ID of the Blazar reservation to use for launching instances.
    constraints:
      - custom_constraint: blazar.reservation
